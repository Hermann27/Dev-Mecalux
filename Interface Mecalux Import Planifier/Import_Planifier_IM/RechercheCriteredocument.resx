<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAABAAAAAAAAajY2AIZCQgC2trYAxmZmALJmZgCmUlIdCj7+HeKGhgCOYmIA/u7WAJZK
        SgC2WloAej4+AC5e/h3+zpod9o6OAMp2dgD+oqIAikpKAKpeXgD++vIA/ra2HaZ2dh2eTk4A+pqaAHI6
        OgCuVlYAGkr+AL5eXgCCRkYdQnL+HdZ+fgC+ZmYAmlZWAIJCQgCORkYAzm5uAKpaWh3qiood6urqAJZS
        UgB6QkIA+paWAP6ysgCSSkoA+vr6Hf7Cwh2iXl4Abjo6AIZGRgDOZmYAplZWABJC+gCWTk4dtl5eHTZm
        /gDykpIAznp6AP6qqgCeUlIA/p6eAHY+Ph0mVv4dvmJiAEp2/gDifn4Avm5uAKJaWgD+/voAbjY2Hcpm
        Zh22amoA5oqKAP7y3gB+Pj4A/urKAMZ6egD+pqYdjkpKHa5iYgD+uroAtoKCAP6amgB2OjoAslpaAB5O
        /h3agoIdnlZWAO6OjgD+9uYAfkJCAJJOTgD+xsYAikZGHapWVh0SQv4Amk5OALpeXgA6av4A9pKSAKJS
        UgDCYmIdTnr+HcJycgD+/v4AAAAAAAAAAAAAAAAAAAAAAAAAAB0AAAAdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHQAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAHQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAB0AAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAAAB0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAdAAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0AAAAdAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAHQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0AAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAA
        AB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AB0AAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAdAAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0AAAAdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHQAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAHQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAB0AAAAdAAAAAP//IyMCAgICAgIIGUUA////I1IsJycnJycnFh0ZMAD/ZEJSCi0t
        LS0tLVFbUykAAAVnPCU7YDUsEjEiWgwSGUVeEBFCR08TL1coWxIdIT0ZGjlNTEJHTxMvVyhbEkNaU1Qf
        OmZiNw0+VRtfBjQEHQwLVitAHmI3DT5VG18GQhIMYQcraGhoaEQUWUkJSzlbIhxIFWgODg4ODg4ODglW
        KAEcWFBoaGhoaGhEFFlJJlcBZTguaA4ODg4ODg4OWTgvIwMqLmhoaGhoaGhoRBRSEyMyA1wcHFQLBRoX
        BSNdUgos/zJcZUEDQTZBF0EKIxhg////MkYPJA8gDwUPFwoX///AAwr9gAHAAwAAgAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIABAADAA4ABKAAAABAAAAAgAAAAAQAgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJxOThCXS0u/mU1N/5BISP+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3
        t/+MYGD/dDw8/203N/9qNTX/ZjMzv2YzMxCfUFC/qFtb//+Zmf+TSUn/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/o6Oj/pnV1/4BFRf9yOTn/bjg4/2g0NP9mMzO/olFR/71tbf//mpr/lktL//n5+f/5+fn/+fn5//n5
        +f/5+fn/+fn5/7SAgP+RT0//djs7/3pBQf9pNTX/ajU1/6ZTU//CcHD//5+f/6hbW/+dUVH/mU9P/5VN
        Tf+RS0v/jEhI/4dFRf+DQ0P/fkFB/3tAQP+IS0v/cTo6/203N/+qVVX/yHV1//+jo/+9bW3/tWho/69j
        Y/+oX1//o1xc/51XV/+WU1P/kE9P/4lLS/+DRkb/mFVV/3c/P/9yOTn/rVdX/895ef//pqb/xnl5/71t
        bf+1aGj/r2Nj/6hfX/+jXFz/nVdX/5ZTU/+QT0//iUtL/6NbW/9+Q0P/djs7/7FZWf/UfHz//6ur/054
        /v86af//NWT//y1d//8lVv//Hk///xlK//8RQ///Cj3//xNB+v+yZWX/g0ZG/3k9Pf+2W1v/2oGB//+w
        sP9Jd///QnD//zpp//81ZP//LV3//yVW//8eT///GUr//xFD//8KPf//v25u/4lLS/98Pj7/uVxc/+GF
        hf//s7P////////////////////////8+P//+fH///Xm///y3P//79X//+vL/814eP+QT0//gUBA/7xe
        Xv/niYn//7e3////////zJn//8yZ///Mmf//zJn//8yZ///Mmf//zJn//8yZ///v1f/agYH/llNT/4RC
        Qv/AYGD/7o2N//+7u////////////////////////////////////Pj///nx///15v//8tz/6IqK/51X
        V/+IRET/w2Ji//SSkv//wMD////////Mmf//zJn//8yZ///Mmf//zJn//8yZ///Mmf//zJn///Xm//OR
        kf+jXFz/jEZG/8hkZP/5lZX//8TE//////////////////////////////////////////////z4///5
        8f//mZn/qF9f/5BISP/MZmbvyGRk///Hx/+9Xl7/vmBg/7FZWf+3XFz/qFRU/61XV/+cTU3/pVRU/49I
        SP+KRkb//5qa/5ZLS/+TSUnvAAAAAMxmZv/8xcX/w2Fh/+F8fP/FZ2f/4Xx8/7ddXf/hfHz/oFBQ/+F8
        fP+VS0v/j0hI//mamv+bTU3/AAAAAAAAAADMZmaAzGZm/8llZf/1j4//zGxs//WPj/+/ZGT/9Y+P/6dT
        U//1j4//nE1N/5VLS/+dT0//n1BQgAAAAAAAACMjAAACAgAACBkAAP//AABSLAAAJycAABYdAAAA/wAA
        UgoAAC0tAABRWwAAAAAAADwlAAA1LIABIlqAAQRw
</value>
  </data>
</root>